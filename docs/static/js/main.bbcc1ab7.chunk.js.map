{"version":3,"sources":["components/CategoryAdd.js","components/GifGridItem.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","GifGridItem","img","className","src","url","alt","title","getGif","category","a","encodeURI","fetch","resp","json","data","gifs","map","id","images","downsized_medium","console","log","useFetchGifs","loading","state","setState","useEffect","getGifs","then","imgs","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAmCeA,EAhCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAiBrC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAAQP,GAAR,mBAAuBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,QCKhBG,EAXK,SAAEC,GAElB,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAIG,IAAKC,IAAKJ,EAAIK,QAC5B,4BAAIL,EAAIK,Y,uBCWLC,EAhBH,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACLL,EADK,iDAC2CM,UAAUF,GADrD,+DAEQG,MAAMP,GAFd,cAELQ,EAFK,gBAGUA,EAAKC,OAHf,uBAGJC,EAHI,EAGJA,KACDC,EAAOD,EAAKE,KAAK,SAAAf,GAAQ,IAAD,EAC1B,MAAO,CACHgB,GAAIhB,EAAIgB,GACRX,MAAOL,EAAIK,MACXF,IAAG,UAAEH,EAAIiB,cAAN,aAAE,EAAYC,iBAAiBf,QAG1CgB,QAAQC,IAAIN,GAXD,kBAYJA,GAZI,4CAAH,sDC8BGO,EA5BM,SAAEd,GAAe,IAAD,EAEPrB,mBAAS,CAC/B2B,KAAM,GACNS,SAAS,IAJoB,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAuBjC,OAhBAC,qBAAW,WAEPC,EAASnB,GACJoB,MAAM,SAAAC,GAEHJ,EAAS,CACLX,KAAMe,EACNN,SAAS,SAItB,CAACf,IAKGgB,GCSIM,EA/BC,SAAC,GAAkB,IAAhBtB,EAAe,EAAfA,SAAe,EAEGc,EAAcd,GAAlCU,EAFiB,EAEtBJ,KAFsB,EAETS,QASrB,OACI,qCACA,6BAAMf,IAEN,qBAAKN,UAAU,YAAf,SACI,6BAEQgB,EAAOF,KAAK,SAAAf,GAAG,OACX,cAAC,EAAD,eAESA,GADAA,EAAIgB,eCWtBc,EA/BM,WAAM,MAIa5C,mBAAS,CAAC,eAJvB,mBAIhB6C,EAJgB,KAIJ9C,EAJI,KAYvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEQ8C,EAAWhB,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAAwBA,SAAWA,GAArBA,Y,MCtBtCyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bbcc1ab7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CategoryAdd = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ) {\r\n            setCategories((c) => [inputValue, ...c ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nCategoryAdd.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CategoryAdd","import React from 'react'\r\n\r\nconst GifGridItem = ( img ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={img.url} alt={img.title}></img>\r\n            <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GifGridItem;","\r\n\r\nconst getGif = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=rAJDI3a5RJFZxIgYC0KO1kDxHW9dCLy8`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    console.log(gifs);\r\n    return gifs;\r\n}\r\n\r\n\r\nexport default getGif;","import { useState, useEffect } from 'react'\r\nimport getGifs from '../helpers/getGifs';\r\n\r\n\r\nconst useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n\r\n    return state; // { data:[], loading: true };\r\n\r\n\r\n}\r\n\r\nexport default useFetchGifs;\r\n\r\n\r\n","import React from 'react'\r\n/* import getGif from '../helpers/getGifs'; */\r\nimport GifGridItem from './GifGridItem';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n   /*  const [images, setImages] = useState([]); */\r\n\r\n   /*  useEffect( () => {\r\n        getGif( category )\r\n            .then(imgs => setImages(imgs));\r\n    }, [category]); */\r\n\r\n    return (\r\n        <>\r\n        <h3>{ category }</h3>\r\n\r\n        <div className=\"card-grid\">\r\n            <ul>\r\n                {\r\n                    images.map( img => \r\n                        <GifGridItem \r\n                            key={img.id} \r\n                            { ...img }\r\n                        />\r\n                    )\r\n                }\r\n            </ul>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifGrid;","import React, { useState } from 'react';\r\nimport CategoryAdd from './components/CategoryAdd'; \r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories = ['Dragon Ball', 'Los caballeros del Zodiaco', 'Death Note']\r\n\r\n    const [categories, setCategories] = useState(['Death Note']);\r\n\r\n    /* const handleAdd = () => {\r\n        const nuevo = 'Pokemon';\r\n\r\n        setCategories((c) => [...c, nuevo]);\r\n    } */\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <CategoryAdd setCategories={setCategories} />\r\n            <hr></hr>\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ul>\r\n                { \r\n                    categories.map( category => \r\n                        <GifGrid key={category} category={ category } />\r\n                    )\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}